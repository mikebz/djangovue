name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  update-python-deps:
    name: Update Python Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Install UV
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Set up Python
      run: uv python install 3.13
      
    - name: Update UV lock file
      run: |
        uv sync --extra dev
        uv lock --upgrade
    
    - name: Setup Node.js for frontend build
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install frontend dependencies
      run: npm ci
    
    - name: Build frontend for Django integration
      run: npm run build
        
    - name: Run tests with updated dependencies
      run: |
        uv sync --extra dev
        uv run python manage.py check
        uv run python manage.py test
        uv run ruff check backend/ djangovue/
        
    - name: Create Pull Request for Python updates
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Python dependencies'
        title: 'chore: Update Python dependencies'
        body: |
          ## Python Dependency Updates
          
          This PR updates Python dependencies to their latest compatible versions.
          
          ### Changes
          - Updated `uv.lock` with latest dependency versions
          - All tests passing with new dependencies
          - Linting checks passed
          
          ### Testing
          - [x] Django system checks pass
          - [x] All tests pass
          - [x] Linting passes
          
          Auto-generated by GitHub Actions.
        branch: chore/update-python-deps
        delete-branch: true

  update-frontend-deps:
    name: Update Frontend Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Update npm dependencies
      run: |
        npm update
        npm audit fix --audit-level=moderate || true
        
    - name: Test frontend build
      run: |
        npm run build
        
    - name: Create Pull Request for frontend updates
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update frontend dependencies'
        title: 'chore: Update frontend dependencies'
        body: |
          ## Frontend Dependency Updates
          
          This PR updates frontend dependencies to their latest compatible versions.
          
          ### Changes
          - Updated `package-lock.json` with latest dependency versions
          - Frontend build successful with new dependencies
          - Security vulnerabilities addressed where possible
          
          ### Testing
          - [x] Frontend build passes
          - [x] Vite configuration compatible
          - [x] Vue.js application builds successfully
          
          Auto-generated by GitHub Actions.
        branch: chore/update-frontend-deps
        delete-branch: true

  security-updates:
    name: Security Updates
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Install UV
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Set up Python
      run: uv python install 3.13
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        uv sync --extra dev
        npm ci
        
    - name: Check for Python security issues
      run: |
        uv add --dev safety
        uv run safety check --json > security-report-python.json || true
        
    - name: Check for frontend security issues
      run: |
        npm audit --json > security-report-frontend.json || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          security-report-*.json
        retention-days: 30
        
    - name: Create security issue if vulnerabilities found
      run: |
        if [ -s security-report-python.json ] || [ -s security-report-frontend.json ]; then
          echo "Security vulnerabilities detected - manual review required"
          echo "Check the security-reports artifact for details"
        fi
